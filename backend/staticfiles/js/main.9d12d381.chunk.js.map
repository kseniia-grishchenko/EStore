{"version":3,"sources":["components/searchBox.js","constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","components/header.js","components/footer.js","components/rating.js","components/product.js","components/loader.js","components/message.js","components/paginate.js","constants/productConstants.js","actions/productActions.js","components/pieChart.js","components/columnChart.js","components/productCarousel.js","constants/cartConstants.js","actions/orderActions.js","screens/homeScreen.js","screens/productScreen.js","actions/cartActions.js","screens/cartScreen.js","components/formContainer.js","screens/loginScreen.js","screens/registerScreen.js","screens/profileScreen.js","screens/userListScreen.js","screens/userEditScreen.js","components/checkoutSteps.js","screens/shippingScreen.js","screens/paymentScreen.js","screens/placeOrderScreen.js","screens/orderScreen.js","components/exportExcelFile.js","components/productTable.js","components/importExcelFile.js","screens/productListScreen.js","screens/productEditScreen.js","screens/orderListScreen.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","type","name","onChange","target","value","className","Button","variant","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","getUserDetails","id","dispatch","getState","a","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","detail","message","Header","useSelector","state","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","is_admin","Footer","Row","Col","Rating","text","color","style","Product","product","Card","_id","Img","src","image","height","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","width","margin","display","Message","children","Alert","Paginate","pages","page","isAdmin","split","console","log","Pagination","Array","keys","map","x","active","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","listProducts","listProductDetails","DemoPie","categories","Object","entries","forEach","key","appendPadding","angleField","colorField","radius","label","offset","content","_ref","percent","concat","toFixed","fontSize","textAlign","interactions","marginTop","marginBottom","DemoColumn","orderItems","sales","xField","yField","columnWidthRatio","meta","alias","ProductCarousel","productTopRated","error","loading","products","useEffect","Carousel","pause","Image","alt","fluid","Caption","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","listOrders","HomeScreen","productList","orderList","orders","search","reduce","acc","category","order","orderItem","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","productDetails","productReviewCreate","loadingProductReview","errorProductReview","successProductReview","success","params","ListGroup","description","countInStock","xs","disabled","reviews","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","Number","removeFromCartHandler","removeFromCart","item","rounded","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","required","ProfileScreen","userDetails","user","userUpdateProfile","orderListMy","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","window","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIs_Admin","userUpdate","errorUpdate","loadingUpdate","successUpdate","updateUser","Check","checked","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","paymentMethod","setPaymentMethod","PlaceOrderScreen","orderCreate","itemsPrice","index","createOrder","OrderScreen","orderId","orderDetails","orderDeliver","loadingDeliver","successDeliver","isDelivered","deliveredAt","deliverOrder","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","ExportReact","dataSet","element","ProductTable","deleteProduct","brand","ExcelReader","props","fileHandler","event","fileObj","files","ExcelRenderer","err","resp","setState","cols","rows","this","bind","columns","tableClassName","tableHeaderRowClass","Component","ProductListScreen","productDelete","loadingDelete","errorDelete","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","obj","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","find","filter","orderPay","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9d12d381.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword){\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else{\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className='mr-sm-2 ml-sm-5'\r\n            >\r\n            </Form.Control>\r\n            <Button\r\n            type='submit'\r\n            variant='outline-success'\r\n            className='p-2'\r\n            >\r\n                Submit\r\n            </Button>\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n\r\n","import axios from \"axios\";\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n} from \"../constants/userConstants\";\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/users/login',\r\n            {'username' : email, 'password' : password},\r\n                config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) =>  {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type: USER_LOGOUT})\r\n    dispatch({type: USER_DETAILS_RESET})\r\n    dispatch({type: ORDER_LIST_MY_RESET})\r\n    dispatch({type: USER_LIST_RESET})\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/users/register/',\r\n            {'name' : name, 'email' : email, 'password' : password},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                 Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/users/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/users/profile/update`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/users`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/users/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/users/update/${user._id}`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {Navbar, Nav, Container, Row, NavDropdown} from \"react-bootstrap\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from \"./searchBox\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nfunction Header() {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand href=\"/\">BShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <SearchBox/>\r\n                    <Nav className=\"ml-auto\">\r\n                        <LinkContainer to=\"/cart\">\r\n                            <Nav.Link><i className=\"fas fa-shopping-cart\"/>Cart</Nav.Link>\r\n                        </LinkContainer>\r\n\r\n                        { userInfo ? (\r\n                            <NavDropdown id='username' title={userInfo.name}>\r\n                                <LinkContainer to='/profile'>\r\n                                    < NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <NavDropdown.Item onClick={logoutHandler}>Log out</NavDropdown.Item>\r\n                            </NavDropdown>\r\n                        ) : (\r\n                            <LinkContainer to=\"/login\">\r\n                                <Nav.Link><i className=\"fas fa-user\"/>Login</Nav.Link>\r\n                            </LinkContainer>\r\n                        )}\r\n\r\n                        {userInfo && userInfo.is_admin && (\r\n                            <NavDropdown title='Admin' id='adminmenu'>\r\n                                <LinkContainer to='/admin/userlist'>\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to='/admin/productlist'>\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                                <LinkContainer to='/admin/orderlist'>\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n\r\n                            </NavDropdown>\r\n                        )}\r\n\r\n\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; BeautyShop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({value, text, color}){\r\n    return(\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating","import React from 'react'\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./rating\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} style={{height: \"240px\"}}/>\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as=\"div\">\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'}/>\r\n\r\n                    </div>\r\n                </Card.Text>\r\n                <Card.Text as=\"h3\">\r\n                    {product.price}₴\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nexport default Product","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loader(){\r\n    return(\r\n        <Spinner animation=\"border\"\r\n                 role=\"status\"\r\n                style={{\r\n                    height: '100px',\r\n                    width: '100px',\r\n                    margin: 'auto',\r\n                    display: 'block'\r\n                }}>\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nfunction Message({ variant, children }){\r\n    return(\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nfunction Paginate({pages, page, keyword='', isAdmin=false}){\r\n\r\n    if(keyword){\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    console.log('KEYWORD:', keyword)\r\n\r\n    return(\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {\r\n                    [...Array(pages).keys()].map((x) => (\r\n                        <LinkContainer\r\n                            key={x + 1}\r\n                        to={!isAdmin ?\r\n                            `/?keyword=${keyword}&page=${x + 1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\r\n                        }\r\n                        >\r\n                            <Pagination.Item active={x + 1 === page}>\r\n                                {x + 1}\r\n                            </Pagination.Item>\r\n\r\n                        </LinkContainer>\r\n                    ))\r\n                }\r\n            </Pagination>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Paginate","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\nexport const PRODUCT_TOP_RESET = 'PRODUCT_TOP_RESET'","import {PRODUCT_LIST_REQUEST,\r\n        PRODUCT_LIST_SUCCESS,\r\n        PRODUCT_LIST_FAIL,\r\n\r\n        PRODUCT_DETAILS_REQUEST,\r\n        PRODUCT_DETAILS_SUCCESS,\r\n        PRODUCT_DETAILS_FAIL,\r\n\r\n        PRODUCT_DELETE_REQUEST,\r\n        PRODUCT_DELETE_SUCCESS,\r\n        PRODUCT_DELETE_FAIL,\r\n\r\n        PRODUCT_CREATE_REQUEST,\r\n        PRODUCT_CREATE_SUCCESS,\r\n        PRODUCT_CREATE_FAIL,\r\n\r\n        PRODUCT_UPDATE_REQUEST,\r\n        PRODUCT_UPDATE_SUCCESS,\r\n        PRODUCT_UPDATE_FAIL,\r\n\r\n        PRODUCT_CREATE_REVIEW_REQUEST,\r\n        PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n        PRODUCT_TOP_REQUEST,\r\n        PRODUCT_TOP_SUCCESS,\r\n        PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\nimport {ORDER_LIST_MY_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS} from \"../constants/orderConstants\";\r\n\r\nexport const listProducts  = (keyword = '') => async (dispatch)  => {\r\n    try{\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n        const { data } = await axios.get(`/products/${keyword}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts  = () => async (dispatch)  => {\r\n    try{\r\n        dispatch({type: PRODUCT_TOP_REQUEST})\r\n\r\n        const { data } = await axios.get(`/products/top/`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listProductDetails  = (id) => async (dispatch)  => {\r\n    try{\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const { data } = await axios.get(`/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/products/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/products/${productId}/reviews/`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Pie } from '@ant-design/charts';\r\n\r\nfunction DemoPie({ categories }){\r\n\r\n    const data = []\r\n    Object.entries(categories).forEach(([key, value]) =>\r\n    data.push({\r\n        type: key,\r\n        value: value\r\n    }))\r\n\r\n    const config = {\r\n        appendPadding: 10,\r\n        data: data,\r\n        angleField: 'value',\r\n        colorField: 'type',\r\n        radius: 0.9,\r\n        label: {\r\n            type: 'inner',\r\n            offset: '-30%',\r\n            content: function content(_ref) {\r\n                const percent = _ref.percent;\r\n                return ''.concat((percent * 100).toFixed(), '%');\r\n            },\r\n            style: {\r\n                fontSize: 14,\r\n                textAlign: 'center',\r\n            },\r\n        },\r\n        interactions: [{ type: 'element-active' }],\r\n    };\r\n    return(\r\n    <div>\r\n        <Pie {...config} />\r\n        <h6 style={{textAlign: \"center\", marginTop: \"3%\", marginBottom: \"8%\"}}>Distribution of products by categories</h6>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default DemoPie\r\n\r\n","import React from \"react\";\r\nimport { Column } from '@ant-design/charts';\r\n\r\nfunction DemoColumn({orderItems}) {\r\n\r\n    const data = []\r\n    orderItems && Object.entries(orderItems).forEach(([key, value]) =>\r\n        data.push({\r\n            type: key,\r\n            sales: value\r\n        }))\r\n    const config = {\r\n        data: data,\r\n        xField: 'type',\r\n        yField: 'sales',\r\n        columnWidthRatio: 0.8,\r\n        meta: {\r\n            type: { alias: \"type\" },\r\n            sales: { alias: \"sales\" },\r\n        },\r\n    };\r\n    return (\r\n        <div style={{width: \"100%\"}}>\r\n            <Column {...config} />\r\n            <h6 style={{textAlign: \"center\", marginTop: \"3%\"}}>Most popular ordered products</h6>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default DemoColumn","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from './loader';\r\nimport Message from './message';\r\nimport { listTopProducts } from '../actions/productActions';\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return (loading ? <Loader />\r\n            : error\r\n                ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Carousel pause='hover' className='bg-dark'>\r\n                        {products.map(product => (\r\n                            <Carousel.Item key={product._id}>\r\n                                <Link to={`/product/${product._id}`}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                    <Carousel.Caption className='carousel.caption'>\r\n                                        <h4>{product.name} ({product.price}₴)</h4>\r\n                                    </Carousel.Caption>\r\n                                </Link>\r\n                            </Carousel.Item>\r\n                        ))}\r\n                    </Carousel>\r\n                )\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCarousel","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","import axios from \"axios\";\r\nimport{\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from \"../constants/orderConstants\";\r\n\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/orders/myorders`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/orders`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/orders/${order._id}/deliver/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport {Row, Col} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Product from \"../components/product\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport Paginate from \"../components/paginate\";\r\nimport {listProducts} from \"../actions/productActions\";\r\nimport DemoPie from \"../components/pieChart\";\r\nimport DemoColumn from \"../components/columnChart\";\r\nimport ProductCarousel from \"../components/productCarousel\";\r\nimport {listOrders} from \"../actions/orderActions\";\r\n\r\nfunction HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {error, loading, products, page, pages} = productList\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading: loadingOrders,  error: errorOrders, orders } = orderList\r\n\r\n    let keyword = history.location.search\r\n    useEffect(() => {\r\n\r\n        dispatch(listProducts(keyword))\r\n        dispatch(listOrders())\r\n\r\n    }, [dispatch, keyword])\r\n\r\n    let categories = products?.reduce((acc, product) =>\r\n            ({ ...acc, [product.category]: (acc[product.category] || 0) + 1 }),\r\n        {});\r\n\r\n    let orderItems = orders?.reduce((acc, order) => {\r\n        order.orderItems?.forEach(orderItem => (acc[orderItem.name] = (acc[orderItem.name] || 0) + 1))\r\n        return acc\r\n    }, {})\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader/>\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                    <Row>\r\n                        {products.map(product => (\r\n                                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product}/>\r\n                                </Col>\r\n                            )\r\n                        )}\r\n                    </Row>\r\n                        <Paginate page={page} pages={pages} keyword={keyword}/>\r\n                    </div>\r\n            }\r\n            <div>\r\n                <DemoPie categories={categories}/>\r\n            </div>\r\n            <div>\r\n                <DemoColumn orderItems={orderItems}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default HomeScreen","import React, {useEffect, useState} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form} from \"react-bootstrap\";\r\nimport Rating from \"../components/rating\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport { listProductDetails, createProductReview } from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../constants/productConstants\";\r\n\r\nfunction ProductScreen({ match, history }){\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, match, successProductReview])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n                rating,\r\n                comment\r\n            }\r\n        ))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Link to=\"/\" className=\"btn btn-light my-3\">Go Back</Link>\r\n\r\n            {loading ? <Loader/>\r\n                : error ? <Message variant='danger'>{error}</Message>\r\n                    :\r\n                    <div>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <Image src={product.image} alt={product.name} fluid/>\r\n                            </Col>\r\n                            <Col md={3}>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <h3>{product.name}</h3>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={\"#f8e825\"}/>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        Price: {product.price}₴\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        Description: {product.description}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n\r\n                            <Col md={3}>\r\n                                <Card>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Price:</Col>\r\n                                                <Col>\r\n                                                    <strong>{product.price}₴</strong>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Status:</Col>\r\n                                                <Col>\r\n                                                    {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {product.countInStock > 0 && (\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Qty</Col>\r\n                                                    <Col xs='auto' className='my-1'>\r\n                                                        <Form.Control\r\n                                                        as='select'\r\n                                                        value={qty}\r\n                                                        onChange = {(e) => setQty(e.target.value)}\r\n                                                        >\r\n                                                            {\r\n                                                                [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                    <option key={x + 1} value={x + 1}>\r\n                                                                        {x + 1}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n\r\n                                                        </Form.Control>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        )}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className=\"btn-block\"\r\n                                                    type=\"button\"\r\n                                                    disabled={product.countInStock === 0}>Add to cart</Button>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <h4>Reviews</h4>\r\n                                {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n\r\n                                <ListGroup variant='flush'>\r\n                                    {product.reviews.map((review) => (\r\n                                        <ListGroup.Item key={review._id}>\r\n                                            <strong>{review.name}</strong>\r\n                                            <Rating value={review.rating} color='#f8e825' />\r\n                                            <p>{review.createdAt.substring(0, 10)}</p>\r\n                                            <p>{review.comment}</p>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <h4>Write a review</h4>\r\n\r\n                                        {loadingProductReview && <Loader />}\r\n                                        {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n\r\n                                        {userInfo ? (\r\n                                            <Form onSubmit={submitHandler}>\r\n                                                <Form.Group controlId='rating'>\r\n                                                    <Form.Label>Rating</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='select'\r\n                                                        value={rating}\r\n                                                        onChange={(e) => setRating(e.target.value)}\r\n                                                    >\r\n                                                        <option value=''>Select...</option>\r\n                                                        <option value='1'>1 - Poor</option>\r\n                                                        <option value='2'>2 - Fair</option>\r\n                                                        <option value='3'>3 - Good</option>\r\n                                                        <option value='4'>4 - Very Good</option>\r\n                                                        <option value='5'>5 - Excellent</option>\r\n                                                    </Form.Control>\r\n                                                </Form.Group>\r\n\r\n                                                <Form.Group controlId='comment'>\r\n                                                    <Form.Label>Review</Form.Label>\r\n                                                    <Form.Control\r\n                                                        as='textarea'\r\n                                                        row='5'\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                        />\r\n                                                </Form.Group>\r\n\r\n                                                <Button\r\n                                                    disabled={loadingProductReview}\r\n                                                    type='submit'\r\n                                                    variant='primary'\r\n                                                >\r\n                                                    Submit\r\n                                                </Button>\r\n\r\n                                            </Form>\r\n                                        ) : (\r\n                                            <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\r\n                                        )}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen","import axios from \"axios\";\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty: qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from \"react-bootstrap\";\r\nimport Message from \"../components/message\"\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\n\r\nfunction CartScreen({ match, location, history }){\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    return(\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                { cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go back</Link>\r\n                    </Message>\r\n                ) :\r\n                <ListGroup variant='flush'>\r\n                    {cartItems.map(item => (\r\n                        <ListGroup.Item key={item.product}>\r\n                            <Row>\r\n                                <Col md={2}>\r\n                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Link to={`/product/${item.product}`}>\r\n                                        {item.name}\r\n                                    </Link>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    {item.price}₴\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Form.Control\r\n                                        as='select'\r\n                                        value={item.qty}\r\n                                        onChange = {(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                    >\r\n                                        {\r\n                                            [...Array(item.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))\r\n                                        }\r\n\r\n                                    </Form.Control>\r\n                                </Col>\r\n\r\n                                <Col md={1}>\r\n                                    <Button\r\n                                        type='button'\r\n                                        variant='light'\r\n                                        onClick={() => removeFromCartHandler(item.product)}\r\n                                    >\r\n                                        <i className='fas fa-trash'/>\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n\r\n                    ))}\r\n                </ListGroup>\r\n                }\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}₴\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { login } from \"../actions/userActions\";\r\n\r\nfunction LoginScreen({location, history}){\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                    to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                    Register\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default LoginScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { register } from \"../actions/userActions\";\r\n\r\nfunction RegisterScreen({location, history}){\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an account? <Link\r\n                    to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                    Sign In\r\n                </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport {getUserDetails, register, updateUserProfile} from \"../actions/userActions\";\r\nimport {userUpdateProfileReducer} from \"../reducers/userReducers\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\n\r\nfunction ProfileScreen({ history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else{\r\n            if(!user || !user.name || success || userInfo._id !== user._id ){\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User profile</h2>\r\n\r\n                    {message && <Message variant='danger'>{message}</Message>}\r\n                    {error && <Message variant='danger'>{error}</Message>}\r\n                    {loading && <Loader />}\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type='name'\r\n                                placeholder='Enter Name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                required\r\n                                type='email'\r\n                                placeholder='Enter Email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group controlId='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type='password'\r\n                                placeholder='Enter Password'\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='confirmPassword'>\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control\r\n                                type='password'\r\n                                placeholder='Confirm Password'\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader/>\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th/>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}₴</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                    )}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                                )\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\n\r\nfunction UserListScreen({ history }){\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading,  error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.is_admin){\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this user?')){\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n                ? (<Loader/>)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                <th></th>\r\n                            </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                            {users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>{user._id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.is_admin ? (\r\n                                        <i className='fas fa-check' style={{color: 'green'}}/>\r\n                                    ) : (\r\n                                        <i className='fas fa-check' style={{color: 'red'}}/>\r\n                                    )}</td>\r\n\r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                <i className='fas fa-edit'/>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                            <i className='fas fa-trash'/>\r\n                                        </Button>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nfunction UserEditScreen({match, history}){\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [is_admin, setIs_Admin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type: USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if(!user.name || user._id !== Number(userId)){\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIs_Admin(user.is_admin)\r\n            }\r\n        }\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id: user._id, name, email, is_admin}))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> :\r\n                    (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter Name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='email'>\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type='email'\r\n                                    placeholder='Enter Email'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='isadmin'>\r\n                                <Form.Check\r\n                                    type='checkbox'\r\n                                    checked={is_admin}\r\n                                    label='Is Admin'\r\n                                    onChange={(e) => setIs_Admin(e.target.checked)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                )}\r\n\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default UserEditScreen","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4}) {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Login</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport CheckoutSteps from \"../components/checkoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\n\r\nfunction ShippingScreen({ history }){\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport CheckoutSteps from \"../components/checkoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\n\r\n\r\nfunction PaymentScreen({ history }){\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('С.O.D.')\r\n\r\n    if(!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return(\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form as='legend'>Select Method</Form>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='C.O.D. or Credit Card'\r\n                            id='C.O.D.'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport CheckoutSteps from \"../components/checkoutSteps\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction PlaceOrderScreen({ history }){\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const dispatch = useDispatch()\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n\r\n    cart.totalPrice =  cart.itemsPrice\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET})\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {'   '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'   '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order items</h2>\r\n                            {cart.cartItems.length === 0 ? (<Message variant='info'>\r\n                                Your cart is empty\r\n                            </Message> ): (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x {item.price}₴ = {(item.qty * item.price).toFixed(2)}₴\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                        </ListGroup.Item>\r\n                                        ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Items:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {cart.itemsPrice}₴\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>{cart.totalPrice}₴</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Message from \"../components/message\";\r\nimport Loader from \"../components/loader\";\r\nimport { getOrderDetails, deliverOrder } from \"../actions/orderActions\";\r\nimport { ORDER_DELIVER_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction OrderScreen({ match, history }){\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const {loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n        if(!order || order._id !== Number(orderId) || successDeliver){\r\n            dispatch({type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n\r\n        }\r\n\r\n    }, [dispatch,  order, orderId, successDeliver])\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return  loading ? (\r\n        <Loader/>\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) :\r\n        (\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong>{order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                {'   '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {'   '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Delivered at {order.deliveredAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not delivered</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order items</h2>\r\n                            {order.orderItems.length === 0 ? (<Message variant='info'>\r\n                                Order is empty\r\n                            </Message> ): (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={2}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x {item.price}₴ = {(item.qty * item.price).toFixed(2)}₴\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Items:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {order.itemsPrice}₴\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>{order.totalPrice}₴</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n\r\n                        {loadingDeliver && <Loader/>}\r\n                        {userInfo && userInfo.is_admin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                type='button'\r\n                                className='btn btn-block'\r\n                                onClick={deliverHandler}\r\n                                >\r\n                                    Mark As Deliver\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen","import React from \"react\";\r\nimport ReactExport from \"react-export-excel\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\n\r\nexport const ExportReact = ({dataSet}) => {\r\n    return (\r\n        <ExcelFile element={<Button variant=\"warning\">Export</Button>}>\r\n            <ExcelSheet data={dataSet} name=\"Products\">\r\n                <ExcelColumn label=\"_id\" value=\"_id\"/>\r\n                <ExcelColumn label=\"name\" value=\"name\"/>\r\n                <ExcelColumn label=\"price\" value=\"price\"/>\r\n                <ExcelColumn label=\"description\" value=\"description\"/>\r\n                <ExcelColumn label=\"category\" value=\"category\"/>\r\n                <ExcelColumn label=\"brand\" value=\"brand\"/>\r\n            </ExcelSheet>\r\n        </ExcelFile>\r\n    )\r\n}","import React from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport {deleteProduct} from \"../actions/productActions\";\r\n\r\nfunction ProductTable({products}) {\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this product?')){\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {products.map(product => (\r\n                <tr key={product._id}>\r\n                    <td>{product._id}</td>\r\n                    <td>{product.name}</td>\r\n                    <td>{product.price}₴</td>\r\n                    <td>{product.category}</td>\r\n                    <td>{product.brand}</td>\r\n\r\n                    <td>\r\n                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                            <Button variant='light' className='btn-sm'>\r\n                                <i className='fas fa-edit'/>\r\n                            </Button>\r\n                        </LinkContainer>\r\n\r\n                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                            <i className='fas fa-trash'/>\r\n                        </Button>\r\n                    </td>\r\n\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default ProductTable","import React, { Component } from 'react';\r\nimport {OutTable, ExcelRenderer} from 'react-excel-renderer';\r\n\r\nclass ExcelReader extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rows: [],\r\n            cols: [],\r\n        }\r\n    }\r\n\r\n    fileHandler = (event) => {\r\n        let fileObj = event.target.files[0];\r\n\r\n        //just pass the fileObj as parameter\r\n        ExcelRenderer(fileObj, (err, resp) => {\r\n            if(err){\r\n                console.log(err);\r\n            }\r\n            else{\r\n                this.setState({\r\n                    cols: resp.cols,\r\n                    rows: resp.rows\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"file\" onChange={this.fileHandler.bind(this)} style={{\"padding\":\"10px\"}} />\r\n                <OutTable data={this.state.rows} columns={this.state.cols} tableClassName=\"ExcelTable2007\" tableHeaderRowClass=\"heading\" />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExcelReader;","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport Paginate from \"../components/paginate\";\r\nimport { listProducts, deleteProduct, createProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\nimport { ExportReact } from \"../components/exportExcelFile\";\r\nimport ProductTable from \"../components/productTable\";\r\nimport ExcelReader from \"../components/importExcelFile\";\r\n\r\nfunction ProductListScreen({ history, match }){\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading,  error, products, pages, page } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete,  error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate,  error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if(!userInfo.is_admin){\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const data = []\r\n\r\n    products.forEach(product => {\r\n        const obj = {\r\n            _id: product._id,\r\n            name: product.name,\r\n            price: product.price,\r\n            description: product.description,\r\n            category: product.category,\r\n            brand: product.brand\r\n        }\r\n        data.push(obj)\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'/> Create Product\r\n                    </Button>\r\n                </Col>\r\n\r\n\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n                ? (<Loader/>)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <div>\r\n                        <ProductTable products={products}/>\r\n                            <Paginate pages={pages} page={page} isAdmin={true}/>\r\n                            <Col className='text-left'>\r\n                                <ExportReact dataSet={data} />\r\n                            </Col>\r\n                                <ExcelReader />\r\n\r\n                        </div>\r\n                    )\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport FormContainer from \"../components/formContainer\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\nfunction ProductEditScreen({match, history}){\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({type: PRODUCT_UPDATE_RESET})\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if(!product.name || product._id !== Number(productId)){\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n\r\n\r\n    }, [product, productId, dispatch, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try{\r\n            const config = {\r\n                headers:{\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/products/upload/', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch(error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader/>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> :\r\n                    (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type='name'\r\n                                    placeholder='Enter Name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter Price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(Number(e.target.value))}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                                <Form.File\r\n                                    id='image-file'\r\n                                    label='Choose File'\r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >\r\n                                </Form.File>\r\n                                {uploading && <Loader/> }\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countInStock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n                                    type='number'\r\n                                    placeholder='Enter Stock'\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(Number(e.target.value))}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    placeholder='Enter Description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/loader\";\r\nimport Message from \"../components/message\";\r\nimport { listOrders } from \"../actions/orderActions\";\r\n\r\nfunction OrderListScreen({ history }){\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading,  error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.is_admin){\r\n            dispatch(listOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n                ? (<Loader/>)\r\n                : error\r\n                    ? (<Message variant='danger'>{error}</Message>)\r\n                    : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>USER</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL PRICE</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.user && order.user.name}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}₴</td>\r\n                                    <td>{order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-check' style={{color: 'red'}}/>\r\n                                    )}\r\n                                    </td>\r\n\r\n                                    <td>{order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-check' style={{color: 'red'}}/>\r\n                                    )}\r\n                                    </td>\r\n\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant='light' className='btn-sm'>\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default OrderListScreen","import React from \"react\";\r\nimport {HashRouter as Router, Route} from \"react-router-dom\";\r\nimport {Container} from \"react-bootstrap\";\r\nimport Header from \"./components/header\";\r\nimport Footer from \"./components/footer\";\r\nimport HomeScreen from \"./screens/homeScreen\";\r\nimport ProductScreen from \"./screens/productScreen\";\r\nimport CartScreen from \"./screens/cartScreen\";\r\nimport LoginScreen from \"./screens/loginScreen\";\r\nimport RegisterScreen from \"./screens/registerScreen\";\r\nimport ProfileScreen from \"./screens/profileScreen\";\r\nimport UserListScreen from \"./screens/userListScreen\";\r\nimport UserEditScreen from \"./screens/userEditScreen\";\r\nimport ShippingScreen from \"./screens/shippingScreen\";\r\nimport PaymentScreen from \"./screens/paymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/placeOrderScreen\";\r\nimport OrderScreen from \"./screens/orderScreen\";\r\nimport ProductListScreen from \"./screens/productListScreen\";\r\nimport ProductEditScreen from \"./screens/productEditScreen\";\r\nimport OrderListScreen from \"./screens/orderListScreen\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <Header/>\r\n        <main className=\"py-3\">\r\n            <Container>\r\n                <Route path=\"/\" component={HomeScreen} exact/>\r\n                <Route path=\"/login\" component={LoginScreen}/>\r\n                <Route path=\"/register\" component={RegisterScreen}/>\r\n                <Route path=\"/profile\" component={ProfileScreen}/>\r\n                <Route path=\"/shipping\" component={ShippingScreen}/>\r\n                <Route path=\"/payment\" component={PaymentScreen}/>\r\n                <Route path=\"/placeorder\" component={PlaceOrderScreen}/>\r\n                <Route path=\"/order/:id\" component={OrderScreen}/>\r\n                <Route path=\"/product/:id\" component={ProductScreen}/>\r\n                <Route path=\"/cart/:id?\" component={CartScreen}/>\r\n\r\n                <Route path=\"/admin/userlist\" component={UserListScreen}/>\r\n                <Route path=\"/admin/user/:id/edit\" component={UserEditScreen}/>\r\n\r\n                <Route path=\"/admin/productlist\" component={ProductListScreen}/>\r\n                <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen}/>\r\n\r\n                <Route path=\"/admin/orderlist\" component={OrderListScreen}/>\r\n            </Container>\r\n        </main>\r\n        <Footer/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer\r\n} from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n                            JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n                            JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n            composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import {PRODUCT_LIST_REQUEST,\r\n        PRODUCT_LIST_SUCCESS,\r\n        PRODUCT_LIST_FAIL,\r\n\r\n        PRODUCT_DETAILS_REQUEST,\r\n        PRODUCT_DETAILS_SUCCESS,\r\n        PRODUCT_DETAILS_FAIL,\r\n\r\n        PRODUCT_DELETE_REQUEST,\r\n        PRODUCT_DELETE_SUCCESS,\r\n        PRODUCT_DELETE_FAIL,\r\n\r\n        PRODUCT_CREATE_REQUEST,\r\n        PRODUCT_CREATE_SUCCESS,\r\n        PRODUCT_CREATE_FAIL,\r\n        PRODUCT_CREATE_RESET,\r\n\r\n        PRODUCT_UPDATE_REQUEST,\r\n        PRODUCT_UPDATE_SUCCESS,\r\n        PRODUCT_UPDATE_FAIL,\r\n        PRODUCT_UPDATE_RESET,\r\n\r\n        PRODUCT_CREATE_REVIEW_REQUEST,\r\n        PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        PRODUCT_CREATE_REVIEW_FAIL,\r\n        PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n        PRODUCT_TOP_REQUEST,\r\n        PRODUCT_TOP_SUCCESS,\r\n        PRODUCT_TOP_FAIL,\r\n} from \"../constants/productConstants\";\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages,\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {reviews: []} }, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = { }, action) => {\r\n    switch (action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true}\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = {product: {}}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = {products: []}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload, }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n\r\n    CART_CLEAR_ITEMS\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case CART_CLEAR_ITEMS:\r\n            return{\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET\r\n} from \"../constants/userConstants\";\r\n\r\n\r\nexport const userLoginReducer = (state = { }, action) => {\r\n    switch (action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = { }, action) => {\r\n    switch (action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = {user: { } }, action) => {\r\n    switch (action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch (action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true,  userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = {users: [] }, action) => {\r\n    switch (action.type){\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false,  users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return {users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type){\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false,  success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {user: {}}, action) => {\r\n    switch (action.type){\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false,  success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import{\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state={}, action) => {\r\n    switch (action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = {loading: true, orderItems: [], shippingAddress: {}}, action) => {\r\n    switch (action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = {orders: []}, action) => {\r\n    switch (action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = {orders: []}, action) => {\r\n    switch (action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type){\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux'\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}